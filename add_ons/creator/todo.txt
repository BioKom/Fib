

- main window
-- try to implement sub windows for the different Fib object views


- database functions -> into own database Fib object handler
	- load Fib database object
	- load database object
	- get database objects from database directory / source
	- set database folder (+ recursive)
	- store as database object into database
	- connections betwean objects: used by, created from, similar (, used together)

- object view (for database objects)
-- connections betwean objects

- draw background ( paint() ) correctly (cEvalueSimpleRGBA255QPainter)


- build cFibElement elements for creator, e.g. cArea -> cAreaCreator
-- implement converter from cFib* to cFib*Creator (cFib*Creator constructor + convert equal to copyElement() )
-- implement partial store and restore (with tickets)
--- basis version in cFibElement (returning with ticket befor reading the next Fib element)
-- implement cFibInputVariable connection
-- implement view for them


nice to have:
-------------

cFibObjectSourcePath::loadFibObject() : "user can change" adapt for operating system users or/and with optional part entry

cFibObjectInfo + tFibObjectInfo: extractInfoFromLoadedFibObject() ( + cFibObjectInfo( ulInIdentifier, pInFibObjectSource ) )


- test drawing on areas greater +-2^15 (QPainter restrictions)


cFlowLayout::heightForWidth( const int iWidth ):
	- use caching (use same value as long as nothing is changed in layout)