
Extract all descriptions of Fib Database objects
================================================

 - 0 : nothing
    - description : This object represents a empty point with no impact.
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -1 : 1D point
    - description : This object represents a point in one dimensions.
    - inVar1 : position of the point in dimension 1
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -2 : 2D Point
    - description : This object represents a point in two dimensions.
    - inVar1 : position of the point in dimension 1
    - inVar2 : position of the point in dimension 2
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -3 : 3D point
    - description : This object represents a point in 3 dimensions.
    - inVar1 : position of the point in dimension 1
    - inVar2 : position of the point in dimension 2
    - inVar3 : position of the point in dimension 3
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -4 : 4D point
    - description : This object represents a point in 4 dimensions.
    - inVar1 : position of the point in dimension 1
    - inVar2 : position of the point in dimension 2
    - inVar3 : position of the point in dimension 3
    - inVar4 : position of the point in dimension 4
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -10 : GPL 3
    - description : GNU GENERAL PUBLIC LICENSE Version 3
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -20 : line
    - description : This object represents a line in two dimensions from an start point (x_1, y_1) to an end point (x_2, y_2).
    - inVar1 : position start point dimension 1 (x_1)
    - inVar2 : position start point dimension 2 (y_1)
    - inVar3 : position end point dimension 1 (x_2)
    - inVar4 : position end point dimension 2 (y_2)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -21 : line
    - description : This object represents a line in two dimensions from an start point (x_1, y_1) to an end point (x_2, y_2) with a given width.
    - inVar1 : position start point dimension 1 (x_1)
    - inVar2 : position start point dimension 2 (y_1)
    - inVar3 : position end point dimension 1 (x_2)
    - inVar4 : position end point dimension 2 (y_2)
    - inVar5 : the width of the line in points
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -25 : line
    - description : This object represents a line in two dimensions from an start point (x_1, y_1) to an end point (x_2, y_2). The points of the line are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_1)
    - inVar2 : position start point dimension 2 (y_1)
    - inVar3 : position end point dimension 1 (x_2)
    - inVar4 : position end point dimension 2 (y_2)
    - subObj1 : The points of the line. The subobject is called for every point on the line.
    - subObj1::outVar1 : the position of the line point in dimension 1 (x)
    - subObj1::outVar2 : the position of the line point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -26 : line
    - description : This object represents a line in two dimensions from an start point (x_1, y_1) to an end point (x_2, y_2) with a given width. The points of the line are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_1)
    - inVar2 : position start point dimension 2 (y_1)
    - inVar3 : position end point dimension 1 (x_2)
    - inVar4 : position end point dimension 2 (y_2)
    - inVar5 : the width of the line in points
    - subObj1 : The points of the line. The subobject is called for every point on the line.
    - subObj1::outVar1 : the position of the line point in dimension 1 (x)
    - subObj1::outVar2 : the position of the line point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -27 : line antialised
    - description : This object represents a line in two dimensions from an start point (x_1, y_1) to an end point (x_2, y_2) with a given width and antialising. The points of the line are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_1)
    - inVar2 : position start point dimension 2 (y_1)
    - inVar3 : position end point dimension 1 (x_2)
    - inVar4 : position end point dimension 2 (y_2)
    - inVar5 : the width of the line in points
    - subObj1 : The points of the line. The subobject is called for every point on the line.
    - subObj1::outVar1 : the position of the line point in dimension 1 (x)
    - subObj1::outVar2 : the position of the line point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -30 : triangle
    - description : This object represents a filled triangle between tree points (x_1, y_1), (x_2, y_2) and (x_3, y_3).
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -35 : triangle
    - description : This object represents a filled triangle between tree points (x_1, y_1), (x_2, y_2) and (x_3, y_3). The points of the triangle are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - subObj1 : The points of the triangle. The subobject is called for every point on the triangle.
    - subObj1::outVar1 : the position of the triangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the triangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -36 : triangle with antialising
    - description : This object represents a filled triangle between tree points (x_1, y_1), (x_2, y_2) and (x_3, y_3) with antialising. The points of the triangle are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - subObj1 : The points of the triangle. The subobject is called for every point on the triangle.
    - subObj1::outVar1 : the position of the triangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the triangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -40 : rectangle
    - description : This object represents a filled rectangle with the start point (x_s, y_s) and start point (x_e, y_e).
    - inVar1 : position of the start point in dimension 1 (x_s)
    - inVar2 : position of the start point in dimension 2 (y_s)
    - inVar3 : position of the end point in dimension 1 (x_e)
    - inVar4 : position of the end point in dimension 2 (y_e)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -41 : quadrangle
    - description : This object represents a filled quadrangle (box). The quadrangle has the given four corner points ( x_1, y_1 ), ( x_2, y_2 ), ( x_3, y_3 ) and ( x_4, y_4 ) as its border points. Where ( x_i, y_i ) is the neighbour point of ( x_{i+1}, y_{i+1} )
    - inVar1 : position of the first point p_1 in dimension 1 (x_1)
    - inVar2 : position of the first point p_1 in dimension 2 (y_1)
    - inVar3 : position of the second point p_2 in dimension 1 (x_2)
    - inVar4 : position of the second point p_2 in dimension 2 (y_2)
    - inVar5 : position of the 3. point p_3 in dimension 1 (x_3)
    - inVar6 : position of the 3. point p_3 in dimension 2 (y_3)
    - inVar7 : position of the 4. point p_4 in dimension 1 (x_4)
    - inVar8 : position of the 4. point p_4 in dimension 2 (y_4)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -45 : rectangle
    - description : This object represents a filled rectangle with the start point (x_s, y_s) and start point (x_e, y_e). The points of the quadrangle are given back as variables of the subobject.
    - inVar1 : position of the start point in dimension 1 (x_s)
    - inVar2 : position of the start point in dimension 2 (y_s)
    - inVar3 : position of the end point in dimension 1 (x_e)
    - inVar4 : position of the end point in dimension 2 (y_e)
    - subObj1 : The points of the rectangle. The subobject is called for every point on the rectangle.
    - subObj1::outVar1 : the position of the rectangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the rectangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -46 : quadrangle
    - description : This object represents a filled quadrangle (box). The quadrangle has the given four corner points ( x_1, y_1 ), ( x_2, y_2 ), ( x_3, y_3 ) and ( x_4, y_4 ) as its border points. Where ( x_i, y_i ) is the neighbour point of ( x_{i+1}, y_{i+1} ). The points of the quadrangle are given back as variables of the subobject.
    - inVar1 : position of the first point p_1 in dimension 1 (x_1)
    - inVar2 : position of the first point p_1 in dimension 2 (y_1)
    - inVar3 : position of the second point p_2 in dimension 1 (x_2)
    - inVar4 : position of the second point p_2 in dimension 2 (y_2)
    - inVar5 : position of the 3. point p_3 in dimension 1 (x_3)
    - inVar6 : position of the 3. point p_3 in dimension 2 (y_3)
    - inVar7 : position of the 4. point p_4 in dimension 1 (x_4)
    - inVar8 : position of the 4. point p_4 in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle. The subobject is called for every point on the quadrangle.
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -47 : quadrangle with antialising
    - description : This object represents a filled quadrangle (box) with antialising. The quadrangle has the given four corner points ( x_1, y_1 ), ( x_2, y_2 ), ( x_3, y_3 ) and ( x_4, y_4 ) as its border points. Where ( x_i, y_i ) is the neighbour point of ( x_{i+1}, y_{i+1} ). The points of the quadrangle are given back as variables of the subobject.
    - inVar1 : position of the first point p_1 in dimension 1 (x_1)
    - inVar2 : position of the first point p_1 in dimension 2 (y_1)
    - inVar3 : position of the second point p_2 in dimension 1 (x_2)
    - inVar4 : position of the second point p_2 in dimension 2 (y_2)
    - inVar5 : position of the 3. point p_3 in dimension 1 (x_3)
    - inVar6 : position of the 3. point p_3 in dimension 2 (y_3)
    - inVar7 : position of the 4. point p_4 in dimension 1 (x_4)
    - inVar8 : position of the 4. point p_4 in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle. The subobject is called for every point on the quadrangle.
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -50 : circle
    - description : This object represents a filled circle with the middle point (x, y) and radius r.
    - inVar1 : position of the middle point in dimension 1 (x)
    - inVar2 : position of the middle point in dimension 2 (y)
    - inVar3 : size of the radius r
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -55 : circle
    - description : This object represents a filled circle with the middle point (x, y) and radius r. The points of the circle are given back as variables of the subobject.
    - inVar1 : position of the middle point in dimension 1 (x)
    - inVar2 : position of the middle point in dimension 2 (y)
    - inVar3 : size of the radius r
    - subObj1 : The points of the circle. The subobject is called for every point on the circle.
    - subObj1::outVar1 : the position of the circle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the circle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -56 : circle antialiased
    - description : This object represents a filled circle with the middle point (x, y), radius r and antialising. The points of the line are given back as variables of the subobject.
    - inVar1 : position of the middle point in dimension 1 (x)
    - inVar2 : position of the middle point in dimension 2 (y)
    - inVar3 : size of the radius r
    - subObj1 : The points of the circle. The subobject is called for every point on the circle.
    - subObj1::outVar1 : the position of the circle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the circle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -70 : tile
    - description : This object represents a tile. In the first dimension it goes from x_s to x_e. In the second dimension the area is filled between y_s and the line y_e = f( x ) = a_0 + a_1 * x + a_2 * x^2 (wher y goes from x_s to x_e).
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position start point dimension 2 (y_s)
    - inVar3 : position end point dimension 1 (x_e)
    - inVar4 : parameter a_0 of the line function f
    - inVar5 : parameter a_1 of the line function f
    - inVar6 : parameter a_2 of the line function f
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -71 : tile
    - description : This object represents a tile. In the second dimension it goes from y_s to y_e. In the first dimension the area is filled between x_s and the line x_e = f( y ) = a_0 + a_1 * y + a_2 * y^2 (wher y goes from y_s to y_e).
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position start point dimension 2 (y_s)
    - inVar3 : position end point dimension 2 (y_e)
    - inVar4 : parameter a_0 of the line function f
    - inVar5 : parameter a_1 of the line function f
    - inVar6 : parameter a_2 of the line function f
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -75 : tile
    - description : This object represents a tile. In the first dimension it goes from x_s to x_e. In the second dimension the area is filled between y_s and the line y_e = f( x ) = a_0 + a_1 * x + a_2 * x^2 (wher y goes from x_s to x_e). The points of the triangle are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position start point dimension 2 (y_s)
    - inVar3 : position end point dimension 1 (x_e)
    - inVar4 : parameter a_0 of the line function f
    - inVar5 : parameter a_1 of the line function f
    - inVar6 : parameter a_2 of the line function f
    - subObj1 : The points of the tile. The subobject is called for every point on the tile.
    - subObj1::outVar1 : the position of the tile point in dimension 1 (x)
    - subObj1::outVar2 : the position of the tile point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -76 : tile
    - description : This object represents a tile. In the second dimension it goes from y_s to y_e. In the first dimension the area is filled between x_s and the line x_e = f( y ) = a_0 + a_1 * y + a_2 * y^2 (wher y goes from y_s to y_e). The points of the triangle are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position start point dimension 2 (y_s)
    - inVar3 : position end point dimension 2 (y_e)
    - inVar4 : parameter a_0 of the line function f
    - inVar5 : parameter a_1 of the line function f
    - inVar6 : parameter a_2 of the line function f
    - subObj1 : The points of the tile. The subobject is called for every point on the tile.
    - subObj1::outVar1 : the position of the tile point in dimension 1 (x)
    - subObj1::outVar2 : the position of the tile point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -80 : tile antialiased
    - description : This object represents a tile with one side antialiased. In the first dimension it goes from x_s to x_e. In the second dimension the area is filled between y_s and the antialiased line y_e = f( x ) = a_0 + a_1 * x + a_2 * x^2 (wher y goes from x_s to x_e; the side of f( x ) is the only antialiased side of the tile). The points of the triangle are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position start point dimension 2 (y_s)
    - inVar3 : position end point dimension 1 (x_e)
    - inVar4 : parameter a_0 of the line function f
    - inVar5 : parameter a_1 of the line function f
    - inVar6 : parameter a_2 of the line function f
    - subObj1 : The points of the tile. The subobject is called for every point on the tile.
    - subObj1::outVar1 : the position of the tile point in dimension 1 (x)
    - subObj1::outVar2 : the position of the tile point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -81 : tile antialiased
    - description : This object represents a tile with one side antialiased. In the first dimension it goes from y_s to y_e. In the second dimension the area is filled between y_s and the antialiased line x_e = f( y ) = a_0 + a_1 * y + a_2 * y^2 (wher y goes from y_s to y_e; the side of f( y ) is the only antialiased side of the tile). The points of the triangle are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position start point dimension 2 (y_s)
    - inVar3 : position end point dimension 2 (y_e)
    - inVar4 : parameter a_0 of the line function f
    - inVar5 : parameter a_1 of the line function f
    - inVar6 : parameter a_2 of the line function f
    - subObj1 : The points of the tile. The subobject is called for every point on the tile.
    - subObj1::outVar1 : the position of the tile point in dimension 1 (x)
    - subObj1::outVar2 : the position of the tile point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -90 : function f( x, a0, a1 ) = a0 + a1 * x
    - description : This object represents a (linear) function of degree 1: f( x, a0, a1 ) = a0 + a1 * x .
    - inVar1 : x position
    - inVar2 : start point or y-intercept a0
    - inVar3 : slope or gradient a1
    - subObj1 : the value f( x, a0, a1 ) as the (only) variable for the subobject
    - subObj1::outVar1 : the value f( x, a0, a1 )
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -95 : evalue intersection of lines
    - description : This object evalues the intersection of two lines f_1( x ) and f_2( x ) . The lines are given as: f(x) = a_0 + a_1 * x with the parameters a_0, a_1 and f_2(x) = b_0 + b_1 * x with the parameters b_0, b_1
    - inVar1 : start point or y-intercept a_0 of line 1 (f_1)
    - inVar2 : slope or gradient a_1 of line 1 (f_1)
    - inVar3 : start point or y-intercept b_0 of line 2 (f_2)
    - inVar4 : slope or gradient b_1 of line 2 (f_2)
    - subObj1 : if and wher the lines intersect
    - subObj1::outVar1 : the position of the intersection point in dimension 1 (x) if existing or 0
    - subObj1::outVar2 : the position of the intersection point in dimension 2 (y) if existing or 0
    - subObj1::outVar3 : 0 if no intersection point exists, else 1
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -96 : evalue intersection of lines
    - description : This object evalues the intersection of tow lines f_1( x ) and f_2( y ) . The lines are given as: f(x) = a_0 + a_1 * x with the parameters a_0, a_1 and f_2(y) = b_0 + b_1 * y with the parameters b_0, b_1
    - inVar1 : start point or y-intercept a_0 of line 1 (f_1)
    - inVar2 : slope or gradient a_1 of line 1 (f_1)
    - inVar3 : start point or y-intercept b_0 of line 2 (f_2)
    - inVar4 : slope or gradient b_1 of line 2 (f_2)
    - subObj1 : if and wher the lines intersect
    - subObj1::outVar1 : the position of the intersection point in dimension 1 (x) if existing or 0
    - subObj1::outVar2 : the position of the intersection point in dimension 2 (y) if existing or 0
    - subObj1::outVar3 : 0 if no intersection point exists, else 1
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -200 : line
    - description : This object represents a line in two dimensions from an start point (x_1, y_1) to an end point (x_2, y_2) with a given width and rounded ends.
    - inVar1 : position start point dimension 1 (x_1)
    - inVar2 : position start point dimension 2 (y_1)
    - inVar3 : position end point dimension 1 (x_2)
    - inVar4 : position end point dimension 2 (y_2)
    - inVar5 : the width of the line in points
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -250 : line antialiased
    - description : This object represents a antialiased line in two dimensions from an start point (x_1, y_1) to an end point (x_2, y_2) with a given width and rounded ends.
    - inVar1 : position start point dimension 1 (x_1)
    - inVar2 : position start point dimension 2 (y_1)
    - inVar3 : position end point dimension 1 (x_2)
    - inVar4 : position end point dimension 2 (y_2)
    - inVar5 : the width of the line in points
    - subObj1 : The points of the line. The subobject is called for every point on the line.
    - subObj1::outVar1 : the position of the line point in dimension 1 (x)
    - subObj1::outVar2 : the position of the line point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -410 : quadrangle
    - description : This object represents a quadrangle (box). In the first dimension it goes from x_s to x_e. In the second dimension the area is filled between two lines y_s = f_1( x ) = a_0 + a_1 * x and y_e = f_2( x ) = b_0 + b_1 * x (wher x goes from x_s to x_e).
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position end point dimension 1 (x_e)
    - inVar3 : parameter a_0 of the first line function f_1
    - inVar4 : parameter a_1 of the first line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -411 : quadrangle
    - description : This object represents a quadrangle (box). In the second dimension it goes from y_s to y_e. In the first dimension the area is filled between two lines x_s = f_1( y ) = a_0 + a_1 * y and x_e = f_2( y ) = b_0 + b_1 * y (wher y goes from y_s to y_e).
    - inVar1 : position start point dimension 2 (y_s)
    - inVar2 : position end point dimension 2 (y_e)
    - inVar3 : parameter a_0 of the first line function f_1
    - inVar4 : parameter a_1 of the first line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -415 : quadrangle
    - description : This object represents a quadrangle (box). In the first dimension it goes from x_s to x_e. In the second dimension the area is filled between two lines y_s = f_1( x ) = a_0 + a_1 * x and y_e = f_2( x ) = b_0 + b_1 * x (wher x goes from x_s to x_e). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position end point dimension 1 (x_e)
    - inVar3 : parameter a_0 of the first line function f_1
    - inVar4 : parameter a_1 of the first line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -416 : quadrangle
    - description : This object represents a quadrangle (box). In the second dimension it goes from y_s to y_e. In the first dimension the area is filled between two lines x_s = f_1( y ) = a_0 + a_1 * y and x_e = f_2( y ) = b_0 + b_1 * y (wher y goes from y_s to y_e). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position start point dimension 2 (y_s)
    - inVar2 : position end point dimension 2 (y_e)
    - inVar3 : parameter a_0 of the first line function f_1
    - inVar4 : parameter a_1 of the first line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -420 : quadrangle
    - description : This object represents a quadrangle (box). In the first dimension it goes from start point x_s to end point x_e. In the second dimension the area is filled between two lines. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (y_e = f_2( x ) = b_0 + b_1 * x) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point x_s is max( min( x1, x2 ), min( x3, x4 ) ) and the end point x_e is min( max( x_1, x_2 ), max( x_3, x_4 ) ). If x_s is bigger than x_e no box is drawn.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -421 : quadrangle
    - description : This object represents a quadrangle (box). In the second dimension it goes from start point y_s to end point y_e. In the first dimension the area is filled between two lines. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (x_e = f_2( x ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point y_s is max( min( y_1, y_2 ), min( y_3, y_4 ) ) and the end point y_e is min( max( y_1, y_2 ), max( y_3, y_4 ) ). If y_s is bigger than y_e no box is drawn.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -422 : quadrangle
    - description : This object represents a quadrangle (box). In the first dimension it goes from start point x_s to end point x_e (if x_e is lower x_s no quadrangle is drawn). In the second dimension the area is filled between two lines. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (y_e = f_2( x ) = b_0 + b_1 * x) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ).
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point x_s
    - inVar10 : the end point x_e
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -423 : quadrangle
    - description : This object represents a quadrangle (box). In the second dimension it goes from start point y_s to end point y_e (if y_e is lower y_s no quadrangle is drawn). In the first dimension the area is filled between two lines. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (x_e = f_2( x ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ).
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point y_s
    - inVar10 : the end point y_e
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -425 : quadrangle
    - description : This object represents a quadrangle (box). In the first dimension it goes from start point x_s to end point x_e. In the second dimension the area is filled between two lines. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (y_e = f_2( x ) = b_0 + b_1 * x) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point x_s is max( min( x_1, x_2 ), min( x_3, x_4 ) ) and the end point x_e is min( max( x_1, x_2 ), max( x_3, x_4 ) ). If x_s is bigger than x_e no box is drawn. The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -426 : quadrangle
    - description : This object represents a quadrangle (box). In the second dimension it goes from start point y_s to end point y_e. In the first dimension the area is filled between two lines. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (x_e = f_2( x ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point y_s is max( min( y_1, y_2 ), min( y_3, y_4 ) ) and the end point y_e is min( max( y_1, y_2 ), max( y_3, y_4 ) ). If y_s is bigger than y_e no box is drawn. The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -427 : quadrangle
    - description : This object represents a quadrangle (box). In the first dimension it goes from start point x_s to end point x_e (if x_e is lower x_s no quadrangle is drawn). In the second dimension the area is filled between two lines. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point x_s
    - inVar10 : the end point x_e
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -428 : quadrangle
    - description : This object represents a quadrangle (box). In the second dimension it goes from start point y_s to end point y_e (if y_e is lower y_s no quadrangle is drawn). In the first dimension the area is filled between two lines. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (x_e = f_2( x ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point y_s
    - inVar10 : the end point y_e
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -465 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with antialising. In the first dimension it goes from x_s to x_e (borders not antialiased). In the second dimension the area is filled between two lines y_s = f_1( x ) = a_0 + a_1 * x and y_e = f_2( x ) = b_0 + b_1 * x (wher x goes from x_s to x_e; borders / lines antialiased ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position end point dimension 1 (x_e)
    - inVar3 : parameter a_0 of the first line function f_1
    - inVar4 : parameter a_1 of the first line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -466 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with antialising. In the second dimension it goes from y_s to y_e (borders not antialiased). In the first dimension the area is filled between two lines x_s = f_1( y ) = a_0 + a_1 * y and x_e = f_2( y ) = b_0 + b_1 * y (wher y goes from y_s to y_e; borders / lines antialiased ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position start point dimension 2 (y_s)
    - inVar2 : position end point dimension 2 (y_e)
    - inVar3 : parameter a_0 of the first line function f_1
    - inVar4 : parameter a_1 of the first line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -467 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with one line / side antialiased. In the first dimension it goes from x_s to x_e (borders not antialiased). In the second dimension the area is filled between two lines y_s = f_1( x ) = a_0 + a_1 * x , which is antialiased, and y_e = f_2( x ) = b_0 + b_1 * x (wher x goes from x_s to x_e; border / line f_1 antialiased and f_2, x_e, x_s not antialiased). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position end point dimension 1 (x_e)
    - inVar3 : parameter a_0 of the first antialiased line function f_1
    - inVar4 : parameter a_1 of the first antialiased line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -468 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with one line / side antialiased. In the first dimension it goes from y_s to y_e (borders not antialiased). In the second dimension the area is filled between two lines x_s = f_1( y ) = a_0 + a_1 * y , which is antialiased, and x_e = f_2( y ) = b_0 + b_1 * y (wher y goes from y_s to y_e; border / line f_1 antialiased and f_2, y_e, y_s not antialiased). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (y_s)
    - inVar2 : position end point dimension 1 (y_e)
    - inVar3 : parameter a_0 of the first antialiased line function f_1
    - inVar4 : parameter a_1 of the first antialiased line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -469 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with antialising. In the first dimension it goes from x_s to x_e (borders not antialiased). In the second dimension the area is filled above the line y_s = f_1( x ) = a_0 + a_1 * x and below the line y_e = f_2( x ) = b_0 + b_1 * x (wher x goes from x_s to x_e; borders / lines antialiased; above is in direction greater y ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position start point dimension 1 (x_s)
    - inVar2 : position end point dimension 1 (x_e)
    - inVar3 : parameter a_0 of the first line function f_1
    - inVar4 : parameter a_1 of the first line function f_1
    - inVar5 : parameter b_0 of the second line function f_2
    - inVar6 : parameter b_1 of the second line function f_2
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -475 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with antialising. In the first dimension it goes from start point x_s to end point x_e (borders not antialiased). In the second dimension the area is filled between two lines, which are antialiased. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (y_e = f_2( x ) = b_0 + b_1 * x) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point x_s is max( min( x_1, x_2 ), min( x_3, x_4 ) ) and the end point x_e is ( min( max( x_1, x_2 ), max( x_3, x_4 ) ) - 1 ) (the '- 1' at the end is, because for antialising the pixle x goes till (x + 1) ). If x_s is bigger than x_e no box is drawn. The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -476 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with antialising. In the second dimension it goes from y_s to y_e (borders not antialiased). In the first dimension the area is filled between two lines, which are antialiased. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (x_e = f_2( y ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point y_s is max( min( y_1, y_2 ), min( y_3, y_4 ) ) and the end point y_e is ( min( max( y_1, y_2 ), max( y_3, y_4 ) ) - 1 ) (the '- 1' at the end is, because for antialising the pixle y goes till (y + 1) ). If y_s is bigger than y_e no box is drawn. The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -477 : quadrangle with antialising
    - description : This object represents a quadrangle (box). In the first dimension it goes from start pixle line x_s to end pixle line x_e (borders not antialiased; if x_e is lower x_s no quadrangle is drawn, a pixle line x goes from x to x + 1 ). In the second dimension the area is filled between two lines, which are antialiased. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (y_e = f_2( x ) = b_0 + b_1 * x) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point x_s
    - inVar10 : the end point x_e
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -478 : quadrangle with antialising
    - description : This object represents a quadrangle (box) with antialising. In the second dimension it goes from pixle line y_s to pixle line y_e (borders not antialiased; if y_e is lower y_s no quadrangle is drawn, a pixle line y goes from y to y + 1 ). In the first dimension the area is filled between two lines, which are antialiased. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ). The second line (x_e = f_2( y ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point x_s
    - inVar10 : the end point x_e
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -479 : quadrangle with one side antialising
    - description : This object represents a quadrangle (box). In the first dimension it goes from start point x_s to end point x_e. In the second dimension the area is filled between two lines. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ) and is the only antialiased side of the quadrangle. The second line (y_e = f_2( x ) = b_0 + b_1 * x) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point x_s is max( min( x_1, x_2 ), min( x_3, x_4 ) ) and the end point x_e is ( min( max( x_1, x_2 ), max( x_3, x_4 ) ) - 1 ) (the '- 1' at the end is, because for antialising the pixle x goes till (x + 1) ). If x_s is bigger than x_e no box is drawn. The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -480 : quadrangle with one side antialising
    - description : This object represents a quadrangle (box) with antialising. In the second dimension it goes from y_s to y_e (borders not antialiased). In the first dimension the area is filled between two lines. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ) and is the only antialiased side of the quadrangle. The second line (x_e = f_2( y ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The start point y_s is max( min( y_1, y_2 ), min( y_3, y_4 ) ) and the end point y_e is ( min( max( y_1, y_2 ), max( y_3, y_4 ) ) - 1 ) (the '- 1' at the end is, because for antialising the pixle y goes till (y + 1) ). If y_s is bigger than y_e no box is drawn. The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -481 : quadrangle with one side antialising
    - description : This object represents a quadrangle (box). In the first dimension it goes from start pixle line x_s to end pixle line x_e (borders not antialiased; if x_e is lower x_s no quadrangle is drawn, a pixle line x goes from x to x + 1 ). In the second dimension the area is filled between two lines. The first line (y_s = f_1( x ) = a_0 + a_1 * x) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ) and is the only antialiased side of the quadrangle. The second line (y_e = f_2( x ) = b_0 + b_1 * x) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point x_s
    - inVar10 : the end point x_e
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -482 : quadrangle with one side antialising
    - description : This object represents a quadrangle (box) with antialising. In the second dimension it goes from pixle line y_s to pixle line y_e (borders not antialiased; if y_e is lower y_s no quadrangle is drawn, a pixle line y goes from y to y + 1 ). In the first dimension the area is filled between two lines. The first line (x_s = f_1( y ) = a_0 + a_1 * y) goes through the first two points ( x_1, y_1 ) and ( x_2, y_2 ) and is the only antialiased side of the quadrangle. The second line (x_e = f_2( y ) = b_0 + b_1 * y) goes through the last two points ( x_3, y_3 ) and ( x_4, y_4 ). The points of the quadrangle (box) are given back as variables of the subobject.
    - inVar1 : position of the first point in dimension 1 (x_1)
    - inVar2 : position of the first point in dimension 2 (y_1)
    - inVar3 : position of the second point in dimension 1 (x_2)
    - inVar4 : position of the second point in dimension 2 (y_2)
    - inVar5 : position of the 3. point in dimension 1 (x_3)
    - inVar6 : position of the 3. point in dimension 2 (y_3)
    - inVar7 : position of the 4. point in dimension 1 (x_4)
    - inVar8 : position of the 4. point in dimension 2 (y_4)
    - inVar9 : the start point x_s
    - inVar10 : the end point x_e
    - subObj1 : The points of the quadrangle (box). The subobject is called for every point on the quadrangle (box).
    - subObj1::outVar1 : the position of the quadrangle point in dimension 1 (x)
    - subObj1::outVar2 : the position of the quadrangle point in dimension 2 (y)
    - subObj1::outVar3 : the antialising factor (1 is full transparent and 0 full opaque)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -512 : circle border
    - description : This object represents a circle border with the middle point (x, y) and radius r.
    - inVar1 : position of the middle point in dimension 1 (x)
    - inVar2 : position of the middle point in dimension 2 (y)
    - inVar3 : the radius r
    - inVar4 : width of the border line (the border goes from radius r to (r - w); standard value is 1)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -517 : circle border
    - description : This object represents a circle border with the middle point (x, y) and radius r. The points of the circle border are given back as variables of the subobject.
    - inVar1 : position of the middle point in dimension 1 (x)
    - inVar2 : position of the middle point in dimension 2 (y)
    - inVar3 : the radius r
    - inVar4 : width of the border line (the border goes from radius r to (r - w); standard value is 1)
    - subObj1 : The points of the circle border. The subobject is called for every point on the circle border.
    - subObj1::outVar1 : the position of the circle border point in dimension 1 (x)
    - subObj1::outVar2 : the position of the circle border point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -900 : evalue fraction
    - description : This object evalues wich part / fraction of a given pixel is below a line f(x) = a_0 + a_1 * x (e. g. for antialising). (A pixel (x,y) goes in the first dimension from x to x+1 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : position of the pixle in dimension 1 (x)
    - inVar4 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given pixel which is below a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given pixel which is below a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -901 : evalue fraction
    - description : This object evalues wich part / fraction of a given pixel is above a line f(x) = a_0 + a_1 * x (e. g. for antialising). (A pixel (x,y) goes in the first dimension from x to x+1 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : position of the pixle in dimension 1 (x)
    - inVar4 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given pixel which is above a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given pixel which is above a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -902 : evalue fraction
    - description : This object evalues wich part / fraction of a given pixel is right a line f(x) = a_0 + a_1 * x (e. g. for antialising). (A pixel (x,y) goes in the first dimension from x to x+1 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : position of the pixle in dimension 1 (x)
    - inVar4 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given pixel which is right a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given pixel which is right a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -903 : evalue fraction
    - description : This object evalues wich part / fraction of a given pixel is left a line f(x) = a_0 + a_1 * x (e. g. for antialising). (A pixel (x,y) goes in the first dimension from x to x+1 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : position of the pixle in dimension 1 (x)
    - inVar4 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given pixel which is left a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given pixel which is left a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -905 : function antialising for 2 lines
    - description : This object evalues wich part / fraction of a pixel is between (in f(x) = y = dim 2 direction) the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(x)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(x)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is between the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - subObj1::outVar1 : the part / fraction of a pixel which is between the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -906 : function antialising for 2 lines
    - description : This object evalues wich part / fraction of a pixel is between (in f(y) = x = dim 2 direction) the lines f_1(y) = a_0 + a_1 * y and f_2(y) = b_0 + b_1 * y (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(y)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(y)
    - inVar3 : the first parameter b_0 for the line f_2(y)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(y)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is between the lines f_1(y) = a_0 + a_1 * y and f_2(y) = b_0 + b_1 * y
    - subObj1::outVar1 : the part / fraction of a pixel which is between the lines f_1(y) = a_0 + a_1 * y and f_2(y) = b_0 + b_1 * y
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -907 : function antialising for 2 lines f_1(x) and f_2(y)
    - description : This object evalues wich part / fraction of a pixel is between (in f(x) = y = dim 2 direction) the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(y)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(y)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is between the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - subObj1::outVar1 : the part / fraction of a pixel which is between the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -908 : function antialising for 2 lines
    - description : This object evalues wich part / fraction of a pixel is between (in f(y) = x = dim 2 direction) the lines f_1(y) = a_0 + a_1 * y and f_2(x) = b_0 + b_1 * x (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(y)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(y)
    - inVar3 : the first parameter b_0 for the line f_2(y)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(y)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is between the lines f_1(y) = a_0 + a_1 * y and f_2(x) = b_0 + b_1 * x
    - subObj1::outVar1 : the part / fraction of a pixel which is between the lines f_1(y) = a_0 + a_1 * y and f_2(x) = b_0 + b_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -910 : evalue fraction
    - description : This object evalues wich part / fraction of a given box is below a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y_1, y_2) goes in the first dimension from x_1 to x_2 and in the second dimension from y_1 to y_2 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y_1)
    - inVar6 : second border in dimension 2 (y_2)
    - subObj1 : the object for the to return part / fraction of a given box is below a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is below a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -911 : evalue fraction
    - description : This object evalues wich part / fraction of a given box is above a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y_1, y_2) goes in the first dimension from x_1 to x_2 and in the second dimension from y_1 to y_2 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y_1)
    - inVar6 : second border in dimension 2 (y_2)
    - subObj1 : the object for the to return part / fraction of a given box is above a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is above a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -912 : evalue fraction
    - description : This object evalues wich part / fraction of a given box is right a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y_1, y_2) goes in the first dimension from x_1 to x_2 and in the second dimension from y_1 to y_2 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y_1)
    - inVar6 : second border in dimension 2 (y_2)
    - subObj1 : the object for the to return part / fraction of a given box is right a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is right a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -913 : evalue fraction
    - description : This object evalues wich part / fraction of a given box is left a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y_1, y_2) goes in the first dimension from x_1 to x_2 and in the second dimension from y_1 to y_2 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y_1)
    - inVar6 : second border in dimension 2 (y_2)
    - subObj1 : the object for the to return part / fraction of a given box is left a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is left a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -915 : evalue fraction
    - description : This object evalues wich part / fraction of a given box of hight 1 is below a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y ) goes in the first dimension from x_1 to x_2 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given box is below a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is below a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -916 : evalue fraction
    - description : This object evalues wich part / fraction of a given box of hight 1 is above a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y ) goes in the first dimension from x_1 to x_2 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given box is above a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is above a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -917 : evalue fraction
    - description : This object evalues wich part / fraction of a given box of hight 1 is right a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y ) goes in the first dimension from x_1 to x_2 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given box is right a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is right a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -918 : evalue fraction
    - description : This object evalues wich part / fraction of a given box of hight 1 is right a line f(x) = a_0 + a_1 * x (e. g. for antialising). (The box (x_1, x_2, y ) goes in the first dimension from x_1 to x_2 and in the second dimension from y to y+1 .)
    - inVar1 : the first parameter a_0 for the line f(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f(x)
    - inVar3 : first border in dimension 1 (x_1)
    - inVar4 : second border in dimension 1 (x_2)
    - inVar5 : first border in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a given box is right a line f(x) = a_0 + a_1 * x
    - subObj1::outVar1 : the part / fraction of a given box which is right a line f(x) = a_0 + a_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -920 : function antialising for below 2 lines
    - description : This object evalues wich part / fraction of a pixel is below (in f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(x)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(x)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is below the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - subObj1::outVar1 : the part / fraction of a pixel which is below the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -921 : function antialising for above 2 lines
    - description : This object evalues wich part / fraction of a pixel is above (in f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(x)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(x)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is above the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - subObj1::outVar1 : the part / fraction of a pixel which is above the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -922 : function antialising for right of 2 lines
    - description : This object evalues wich part / fraction of a pixel is right (for f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(x)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(x)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is right the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - subObj1::outVar1 : the part / fraction of a pixel which is right the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -923 : function antialising for left of 2 lines
    - description : This object evalues wich part / fraction of a pixel is left (for f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(x)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(x)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is left the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - subObj1::outVar1 : the part / fraction of a pixel which is left the lines f_1(x) = a_0 + a_1 * x and f_2(x) = b_0 + b_1 * x
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -924 : function antialising for below 2 lines f(x) and f(y)
    - description : This object evalues wich part / fraction of a pixel is below (in f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(y)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(y)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is below the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - subObj1::outVar1 : the part / fraction of a pixel which is below the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -925 : function antialising for above 2 lines f(x) and f(y)
    - description : This object evalues wich part / fraction of a pixel is above (in f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(y)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(y)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is above the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - subObj1::outVar1 : the part / fraction of a pixel which is above the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -926 : function antialising for right 2 lines f(x) and f(y)
    - description : This object evalues wich part / fraction of a pixel is right (in f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(y)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(y)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is right the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - subObj1::outVar1 : the part / fraction of a pixel which is right the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -927 : function antialising for left 2 lines f(x) and f(y)
    - description : This object evalues wich part / fraction of a pixel is left (in f(x) = y = dim 2 direction) of both the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y (e. g. for antialising).
    - inVar1 : the first parameter a_0 for the line f_1(x)
    - inVar2 : the slope or gradien (second parameter) a_1 for the line f_1(x)
    - inVar3 : the first parameter b_0 for the line f_2(y)
    - inVar4 : the slope or gradien (second parameter) b_1 for the line f_2(y)
    - inVar5 : position of the pixle in dimension 1 (x)
    - inVar6 : position of the pixle in dimension 2 (y)
    - subObj1 : the object for the to return part / fraction of a pixel is left the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - subObj1::outVar1 : the part / fraction of a pixel which is left the lines f_1(x) = a_0 + a_1 * x and f_2(y) = b_0 + b_1 * y
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -950 : evalue intersection of lines trougth points
    - description : This object evalues the intersection of two lines betwean two points each. The line f_1 goes from the point p_1=(x_1, y_1) to p_2=(x_2, y_2). The line f_2 goes from the point p_3=(x_3, y_3) to p_4=(x_4, y_4). The intersection has to be betwaen the points.
    - inVar1 : position of the first point p_1 in dimension 1 (x_1) for line f_1
    - inVar2 : position of the first point p_1 in dimension 2 (y_1) for line f_1
    - inVar3 : position of the second point p_2 in dimension 1 (x_2) for line f_1
    - inVar4 : position of the second point p_2 in dimension 2 (y_2) for line f_1
    - inVar5 : position of the 3. point p_3 in dimension 1 (x_3) for line f_2
    - inVar6 : position of the 3. point p_3 in dimension 2 (y_3) for line f_2
    - inVar7 : position of the 4. point p_4 in dimension 1 (x_4) for line f_2
    - inVar8 : position of the 4. point p_4 in dimension 2 (y_4) for line f_2
    - subObj1 : if and wher the lines intersect
    - subObj1::outVar1 : the position of the intersection point in dimension 1 (x) if existing or 0
    - subObj1::outVar2 : the position of the intersection point in dimension 2 (y) if existing or 0
    - subObj1::outVar3 : 0 if no intersection point exists, else 1
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -951 : evalue if point is inside triangle
    - description : This object evalues if a point p=(x,y) is inside a triangle (excludig border lines). The triangle is given by the points p_1=(x_1, y_1), p_2=(x_2, y_2) and p_3=(x_3, y_3).
    - inVar1 : position of the point p to check in dimension 1 (x)
    - inVar2 : position of the point p to check in dimension 2 (y)
    - inVar3 : position of the first point p_1 in dimension 1 (x_1) for the triangle
    - inVar4 : position of the first point p_1 in dimension 2 (y_1) for the triangle
    - inVar5 : position of the second point p_2 in dimension 1 (x_2) for the triangle
    - inVar6 : position of the second point p_2 in dimension 2 (y_2) for the triangle
    - inVar7 : position of the 3. point p_3 in dimension 1 (x_3) for the triangle
    - inVar8 : position of the 3. point p_3 in dimension 2 (y_3) for the triangle
    - subObj1 : if the point p is inside the triangle
    - subObj1::outVar1 : 1 if the point p is inside the triangle, else 0
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -5000 : stickman
    - description : This object draws a stickman. The stickman has a body, a head, two arms and two legs, with each one joint in the arms and legs. The arms will begin at 1/4 of the body size below the body start (wher the head is). The head will 1/4 (of its radius) overlap the body. The arms length will be the part 0.62 (= golden ratio) of the body or legs. The upper part of arms and legs start at the body, the lower parts start at the other end of the upper parts. The lower part length will be the part 0.62 (= golden ratio) of ther upper part.
    - inVar1 : position of the stickman start point (lower end of first (right) lower leg) in dimension 1
    - inVar2 : position of the stickman start point (lower end of first (right) lower leg) in dimension 2
    - inVar3 : size s of stickman (top of the head to feet bottom, if legs are straight)
    - inVar4 : angle alpha of body to the dimension 2 axis (or y-axis, because most stickman will be vertical or parallel to the y-axis) in clockwise direction, the feet start points are on the bottom of the body (and, for the angle, on the virtual dimension 2 (y) axis)
    - inVar5 : angle (in radian) betwean right upper arm and body (clockwise direction, if 0 the arm is on the body)
    - inVar6 : angle (in radian) betwean left upper arm and body (counter clockwise direction, if 0 the arm is on the body)
    - inVar7 : angle (in radian) betwean right upper leg and body axis (clockwise direction, if 0 the leg is straight)
    - inVar8 : angle (in radian) betwean left upper leg and body axis (counter clockwise direction, if 0 the leg is straigh)
    - inVar9 : angle (in radian) betwean head and body (clockwise direction)
    - inVar10 : angle (in radian) betwean right lower arm and upper arm (clockwise direction, if 0 the arm is straight)
    - inVar11 : angle (in radian) betwean left lower arm and upper arm (counter clockwise direction, if 0 the arm is straight)
    - inVar12 : angle (in radian) betwean right lower leg and upper leg (counter clockwise direction, if 0 the leg is straight)
    - inVar13 : angle (in radian) betwean left lower leg and upper leg (clockwise direction, if 0 the leg is straigh)
    - inVar14 : width of lines w of the stickman (if lower or equal 0 the standard width w = size s / 24 will be used)
    - inVar15 : radius r of head of the stickman (if lower or equal 0 the standard width r = size s / 10 will be used)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -5005 : stickman
    - description : This object draws a stickman. The points of the stickman are given back as variables of the subobject. The stickman has a body, a head, two arms and two legs, with each one joint in the arms and legs. The arms will begin at 1/4 of the body size below the body start (wher the head is). The head will 1/4 (of its radius) overlap the body. The arms length will be the part 0.62 (= golden ratio) of the body or legs. The upper part of arms and legs start at the body, the lower parts start at the other end of the upper parts. The lower part length will be the part 0.62 (= golden ratio) of ther upper part.
    - inVar1 : position of the stickman start point (lower end of first (right) lower leg) in dimension 1
    - inVar2 : position of the stickman start point (lower end of first (right) lower leg) in dimension 2
    - inVar3 : size s of stickman (top of the head to feet bottom, if legs are straight)
    - inVar4 : angle alpha of body to the dimension 2 axis (or y-axis, because most stickman will be vertical or parallel to the y-axis) in clockwise direction, the feet start points are on the bottom of the body (and, for the angle, on the virtual dimension 2 (y) axis)
    - inVar5 : angle (in radian) betwean right upper arm and body (clockwise direction, if 0 the arm is on the body)
    - inVar6 : angle (in radian) betwean left upper arm and body (counter clockwise direction, if 0 the arm is on the body)
    - inVar7 : angle (in radian) betwean right upper leg and body axis (clockwise direction, if 0 the leg is straight)
    - inVar8 : angle (in radian) betwean left upper leg and body axis (counter clockwise direction, if 0 the leg is straigh)
    - inVar9 : angle (in radian) betwean head and body (clockwise direction)
    - inVar10 : angle (in radian) betwean right lower arm and upper arm (clockwise direction, if 0 the arm is straight)
    - inVar11 : angle (in radian) betwean left lower arm and upper arm (counter clockwise direction, if 0 the arm is straight)
    - inVar12 : angle (in radian) betwean right lower leg and upper leg (counter clockwise direction, if 0 the leg is straight)
    - inVar13 : angle (in radian) betwean left lower leg and upper leg (clockwise direction, if 0 the leg is straigh)
    - inVar14 : width of lines w of the stickman (if lower or equal 0 the standard width w = size s / 24 will be used)
    - inVar15 : radius r of head of the stickman (if lower or equal 0 the standard width r = size s / 10 will be used)
    - subObj1 : The points of the stickman. The subobject is called for every point on the stickman.
    - subObj1::outVar1 : the position of the stickman point in dimension 1 (x)
    - subObj1::outVar2 : the position of the stickman point in dimension 2 (y)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -5055 : stickman framework
    - description : This object represents a stickman framework. The stickman has a body, a head, two arms and two legs, with each one joint in the arms and legs. You have to provide a line and a circle object for the stickman parts as subobjects (see below). The arms will begin at 1/4 of the body size below the body start (wher the head is). The head will 1/4 (of its radius) overlap the body. The arms length will be the part 0.62 (= golden ratio) of the body or legs. The upper part of arms and legs start at the body, the lower parts start at the other end of the upper parts. The lower part length will be the part 0.62 (= golden ratio) of ther upper part.
    - inVar1 : position of the stickman start point (lower end of first (right) lower leg) in dimension 1 (x_lrle)
    - inVar2 : position of the stickman start point (lower end of first (right) lower leg) in dimension 2 (y_lrle)
    - inVar3 : size s of stickman (top of the head to feet bottom, if legs are straight)
    - inVar4 : angle alpha of body to the dimension 2 axis (or y-axis, because most stickman will be vertical or parallel to the y-axis) in clockwise direction, the feet start points are on the bottom of the body (and, for the angle, on the virtual dimension 2 (y) axis)
    - inVar5 : angle (in radian) betwean right upper arm and body (clockwise direction, if 0 the arm is on the body)
    - inVar6 : angle (in radian) betwean left upper arm and body (counter clockwise direction, if 0 the arm is on the body)
    - inVar7 : angle (in radian) betwean right upper leg and body axis (clockwise direction, if 0 the leg is straight)
    - inVar8 : angle (in radian) betwean left upper leg and body axis (counter clockwise direction, if 0 the leg is straigh)
    - inVar9 : angle (in radian) betwean head and body (clockwise direction)
    - inVar10 : angle (in radian) betwean right lower arm and upper arm (clockwise direction, if 0 the arm is straight)
    - inVar11 : angle (in radian) betwean left lower arm and upper arm (counter clockwise direction, if 0 the arm is straight)
    - inVar12 : angle (in radian) betwean right lower leg and upper leg (counter clockwise direction, if 0 the leg is straight)
    - inVar13 : angle (in radian) betwean left lower leg and upper leg (clockwise direction, if 0 the leg is straigh)
    - inVar14 : width of lines w of the stickman (if lower or equal 0 the standard width w = size s / 24 will be used)
    - inVar15 : radius r of head of the stickman (if lower or equal 0 the standard width r = size s / 10 will be used)
    - subObj1 : The line subobject for the right and left upper and lower arms and legs and the body of the stickman. The start points and end points are given as parameters. (This subobject is called 9 times, for each body part with its parameters.)
    - subObj1::outVar1 : position of the stickman line body part start point in dimension 1
    - subObj1::outVar2 : position of the stickman line body part start point in dimension 2
    - subObj1::outVar3 : position of the stickman line body part end point in dimension 1
    - subObj1::outVar4 : position of the stickman line body part end point in dimension 2
    - subObj1::outVar5 : width of line w of the stickman line body part
    - subObj2 : The subobject for the head (circle) of the stickman. The center and radius of the head are given as parameters.
    - subObj2::outVar1 : position of the stickman head center point in dimension 1 (x_h)
    - subObj2::outVar2 : position of the stickman head center point in dimension 2 (y_h)
    - subObj2::outVar3 : radius r of the stickman head
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -5056 : stickman framework
    - description : This object represents a stickman framework. The stickman has a body, a head, two arms and two legs, with each one joint in the arms and legs. You have to provide the stickman parts as subobjects (see below). The arms will begin at 1/4 of the body size below the body start (wher the head is). The head will 1/4 (of its radius) overlap the body. The arms length will be the part 0.62 (= golden ratio) of the body or legs. The upper part of arms and legs start at the body, the lower parts start at the other end of the upper parts. The lower part length will be the part 0.62 (= golden ratio) of ther upper part.
    - inVar1 : position of the stickman start point (lower end of first (right) lower leg) in dimension 1 (x_lrle)
    - inVar2 : position of the stickman start point (lower end of first (right) lower leg) in dimension 2 (y_lrle)
    - inVar3 : size s of stickman (top of the head to feet bottom, if legs are straight)
    - inVar4 : angle alpha of body to the dimension 2 axis (or y-axis, because most stickman will be vertical or parallel to the y-axis) in clockwise direction, the feet start points are on the bottom of the body (and, for the angle, on the virtual dimension 2 (y) axis)
    - inVar5 : angle (in radian) betwean right upper arm and body (clockwise direction, if 0 the arm is on the body)
    - inVar6 : angle (in radian) betwean left upper arm and body (counter clockwise direction, if 0 the arm is on the body)
    - inVar7 : angle (in radian) betwean right upper leg and body axis (clockwise direction, if 0 the leg is straight)
    - inVar8 : angle (in radian) betwean left upper leg and body axis (counter clockwise direction, if 0 the leg is straigh)
    - inVar9 : angle (in radian) betwean head and body (clockwise direction)
    - inVar10 : angle (in radian) betwean right lower arm and upper arm (clockwise direction, if 0 the arm is straight)
    - inVar11 : angle (in radian) betwean left lower arm and upper arm (counter clockwise direction, if 0 the arm is straight)
    - inVar12 : angle (in radian) betwean right lower leg and upper leg (counter clockwise direction, if 0 the leg is straight)
    - inVar13 : angle (in radian) betwean left lower leg and upper leg (clockwise direction, if 0 the leg is straigh)
    - inVar14 : width of lines w of the stickman (if lower or equal 0 the standard width w = size s / 24 will be used)
    - inVar15 : radius r of head of the stickman (if lower or equal 0 the standard width r = size s / 10 will be used)
    - subObj1 : The subobject for the right and left upper arms of the stickman. The start point (body) and end points of the upper arms are given as parameters. (This subobject is called two times, for each upper arm with its parameters.)
    - subObj1::outVar1 : position of the stickman right and left upper arms start point (upper end at body) in dimension 1 (x_aXus)
    - subObj1::outVar2 : position of the stickman right and left upper arms start point (upper end at body) in dimension 2 (y_aXus)
    - subObj1::outVar3 : position of the stickman right and left upper arms end point in dimension 1 (x_aXue)
    - subObj1::outVar4 : position of the stickman right and left upper arms end point in dimension 2 (y_aXue)
    - subObj1::outVar5 : width of line w of the stickman right and left upper arms
    - subObj2 : The subobject for the first (right) and second (left) upper legs of the stickman. The start point (body) and end point of the upper leg are given as parameters. (This subobject is called two times, for each upper leg with its parameters.)
    - subObj2::outVar1 : position of the stickman right and left upper legs start point (upper end at body) in dimension 1 (x_lXus)
    - subObj2::outVar2 : position of the stickman right and left upper legs start point (upper end at body) in dimension 2 (y_lXus)
    - subObj2::outVar3 : position of the stickman right and left upper legs end point in dimension 1 (x_lXue)
    - subObj2::outVar4 : position of the stickman right and left upper legs end point in dimension 2 (y_lXue)
    - subObj2::outVar5 : width of line w of the stickman right and left upper legs
    - subObj3 : The subobject for the body of the stickman. The start point (arms),and end point (legs) of the body are given as parameters.
    - subObj3::outVar1 : position of the stickman body start point (upper end at arms) in dimension 1 (x_bs)
    - subObj3::outVar2 : position of the stickman body start point (upper end at arms) in dimension 2 (y_bs)
    - subObj3::outVar3 : position of the stickman body end point (lower end at legs) in dimension 1 (x_be)
    - subObj3::outVar4 : position of the stickman body end point (lower end at legs) in dimension 2 (y_be)
    - subObj3::outVar5 : width of line w of the stickman body
    - subObj4 : The subobject for the head of the stickman. The center and radius of the head are given as parameters.
    - subObj4::outVar1 : position of the stickman head center point in dimension 1 (x_h)
    - subObj4::outVar2 : position of the stickman head center point in dimension 2 (y_h)
    - subObj4::outVar3 : radius r of the stickman head
    - subObj5 : The subobject for the right and left lower arms of the stickman. The start point (upper arm) and end point of the lower arm are given as parameters. (This subobject is called two times, for each lower arm with its parameters.)
    - subObj5::outVar1 : position of the stickman right and left lower arms start point (upper end at upper arm) in dimension 1 (x_aXls)
    - subObj5::outVar2 : position of the stickman right and left lower arms start point (upper end at upper arm) in dimension 2 (y_aXls)
    - subObj5::outVar3 : position of the stickman right and left lower arms end point in dimension 1 (x_aXle)
    - subObj5::outVar4 : position of the stickman right and left lower arms end point in dimension 2 (y_aXle)
    - subObj5::outVar5 : width of line w of the stickman right and left lower arms
    - subObj6 : The subobject for the first (right) and second (left) lower legs of the stickman. The start point (upper leg) and end point of the lower leg are given as parameters. (This subobject is called two times, for each lower leg with its parameters.)
    - subObj6::outVar1 : position of the stickman right and left lower legs start point (upper end at upper leg) in dimension 1 (x_lXls)
    - subObj6::outVar2 : position of the stickman right and left lower legs start point (upper end at upper leg) in dimension 2 (y_lXls)
    - subObj6::outVar3 : position of the stickman right and left lower legs end point in dimension 1 (x_lXle)
    - subObj6::outVar4 : position of the stickman right and left lower legs end point in dimension 2 (y_lXle)
    - subObj6::outVar5 : width of line w of the stickman right and left lower legs
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -5057 : stickman framework
    - description : This object represents a simple stickman framework. The stickman has a body, a head, two arms and two legs, but no joints in the arms or legs. You have to provide the stickman parts as subobjects (see below). The arms will begin at 1/4 of the body size below the body start (wher the head is). The head will 1/4 (of its radius) overlap the body. The arms length will be the part 0.62 (= golden ratio) of the body or legs. 
    - inVar1 : position of the stickman start point (lower end of first (right) leg) in dimension 1 (x_lre)
    - inVar2 : position of the stickman start point (lower end of first (right) leg) in dimension 2 (y_lre)
    - inVar3 : size s of stickman (top of the head to feet bottom, if legs are straight)
    - inVar4 : angle alpha of body to the dimension 2 axis (or y-axis, because most stickman will be vertical or parallel to the y-axis) in clockwise direction, the feet start points are on the bottom of the body (and, for the angle, on the virtual dimension 2 (y) axis)
    - inVar5 : angle (in radian) betwean right arm and body (clockwise direction, if 0 the arm is on the body)
    - inVar6 : angle (in radian) betwean left arm and body (counter clockwise direction, if 0 the arm is on the body)
    - inVar7 : angle (in radian) betwean right leg and body axis (clockwise direction, if 0 the leg is straight)
    - inVar8 : angle (in radian) betwean left leg and body axis (counter clockwise direction, if 0 the leg is straigh)
    - inVar9 : angle (in radian) betwean head and body (clockwise direction)
    - inVar10 : width of lines w of the stickman (if lower or equal 0 the standard width w = size s / 24 will be used)
    - inVar11 : radius r of head of the stickman (if lower or equal 0 the standard width r = size s / 10 will be used)
    - subObj1 : The subobject for the right arm of the stickman. The start point (body), end point and width of arm are given as parameters.
    - subObj1::outVar1 : position of the stickman right arm start point (upper end at body) in dimension 1 (x_ars)
    - subObj1::outVar2 : position of the stickman right arm start point (upper end at body) in dimension 2 (y_ars)
    - subObj1::outVar3 : position of the stickman right arm end point in dimension 1 (x_are)
    - subObj1::outVar4 : position of the stickman right arm end point in dimension 2 (y_are)
    - subObj1::outVar5 : width of line w of the stickman right arm
    - subObj2 : The subobject for the left arm of the stickman. The start point (body), end point and width of arm are given as parameters.
    - subObj2::outVar1 : position of the stickman left arm start point (upper end at body) in dimension 1 (x_als)
    - subObj2::outVar2 : position of the stickman left arm start point (upper end at body) in dimension 2 (y_als)
    - subObj2::outVar3 : position of the stickman left arm end point in dimension 1 (x_ale)
    - subObj2::outVar4 : position of the stickman left arm end point in dimension 2 (y_ale)
    - subObj2::outVar5 : width of line w of the stickman left arm
    - subObj3 : The subobject for the first (right) leg of the stickman. The start point (body), end point and width of leg are given as parameters.
    - subObj3::outVar1 : position of the stickman right leg start point (upper end at body) in dimension 1 (x_lrs)
    - subObj3::outVar2 : position of the stickman right leg start point (upper end at body) in dimension 2 (y_lrs)
    - subObj3::outVar3 : position of the stickman right leg end point in dimension 1 (x_lre)
    - subObj3::outVar4 : position of the stickman right leg end point in dimension 2 (y_lre)
    - subObj3::outVar5 : width of line w of the stickman right leg
    - subObj4 : The subobject for the left (second) leg of the stickman. The start point (body), end point and width of leg are given as parameters.
    - subObj4::outVar1 : position of the stickman left leg start point (upper end at body) in dimension 1 (x_lls)
    - subObj4::outVar2 : position of the stickman left leg start point (upper end at body) in dimension 2 (y_lls)
    - subObj4::outVar3 : position of the stickman left leg end point in dimension 1 (x_lle)
    - subObj4::outVar4 : position of the stickman left leg end point in dimension 2 (y_lle)
    - subObj4::outVar5 : width of line w of the stickman left leg
    - subObj5 : The subobject for the body of the stickman. The start point (arms), end point (legs) and width of body are given as parameters.
    - subObj5::outVar1 : position of the stickman body start point (upper end at arms) in dimension 1 (x_bs)
    - subObj5::outVar2 : position of the stickman body start point (upper end at arms) in dimension 2 (y_bs)
    - subObj5::outVar3 : position of the stickman body end point (lower end at legs) in dimension 1 (x_be)
    - subObj5::outVar4 : position of the stickman body end point (lower end at legs) in dimension 2 (y_be)
    - subObj5::outVar5 : width of line w of the stickman body 
    - subObj6 : The subobject for the head of the stickman. The center and radius of the head are given as parameters.
    - subObj6::outVar1 : position of the stickman head center point in dimension 1 (x_h)
    - subObj6::outVar2 : position of the stickman head center point in dimension 2 (y_h)
    - subObj6::outVar3 : radius r of the stickman head
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -5058 : stickman framework
    - description : This object represents a stickman framework. The stickman has a body, a head, two arms and two legs, with each one joint in the arms and legs. You have to provide the stickman parts as subobjects (see below). The arms will begin at 1/4 of the body size below the body start (wher the head is). The head will 1/4 (of its radius) overlap the body. The arms length will be the part 0.62 (= golden ratio) of the body or legs. The upper part of arms and legs start at the body, the lower parts start at the other end of the upper parts. The lower part length will be the part 0.62 (= golden ratio) of ther upper part.
    - inVar1 : position of the stickman start point (lower end of first (right) lower leg) in dimension 1 (x_lrle)
    - inVar2 : position of the stickman start point (lower end of first (right) lower leg) in dimension 2 (y_lrle)
    - inVar3 : size s of stickman (top of the head to feet bottom, if legs are straight)
    - inVar4 : angle alpha of body to the dimension 2 axis (or y-axis, because most stickman will be vertical or parallel to the y-axis) in clockwise direction, the feet start points are on the bottom of the body (and, for the angle, on the virtual dimension 2 (y) axis)
    - inVar5 : angle (in radian) betwean right upper arm and body (clockwise direction, if 0 the arm is on the body)
    - inVar6 : angle (in radian) betwean left upper arm and body (counter clockwise direction, if 0 the arm is on the body)
    - inVar7 : angle (in radian) betwean right upper leg and body axis (clockwise direction, if 0 the leg is straight)
    - inVar8 : angle (in radian) betwean left upper leg and body axis (counter clockwise direction, if 0 the leg is straigh)
    - inVar9 : angle (in radian) betwean head and body (clockwise direction)
    - inVar10 : angle (in radian) betwean right lower arm and upper arm (clockwise direction, if 0 the arm is straight)
    - inVar11 : angle (in radian) betwean left lower arm and upper arm (counter clockwise direction, if 0 the arm is straight)
    - inVar12 : angle (in radian) betwean right lower leg and upper leg (counter clockwise direction, if 0 the leg is straight)
    - inVar13 : angle (in radian) betwean left lower leg and upper leg (clockwise direction, if 0 the leg is straigh)
    - inVar14 : width of lines w of the stickman (if lower or equal 0 the standard width w = size s / 24 will be used)
    - inVar15 : radius r of head of the stickman (if lower or equal 0 the standard width r = size s / 10 will be used)
    - subObj1 : The subobject for the right upper arm of the stickman. The start point (body) and end point of the upper arm are given as parameters.
    - subObj1::outVar1 : position of the stickman right upper arm start point (upper end at body) in dimension 1 (x_arus)
    - subObj1::outVar2 : position of the stickman right upper arm start point (upper end at body) in dimension 2 (y_arus)
    - subObj1::outVar3 : position of the stickman right upper arm end point in dimension 1 (x_arue)
    - subObj1::outVar4 : position of the stickman right upper arm end point in dimension 2 (y_arue)
    - subObj1::outVar5 : width of line w of the stickman right upper arm
    - subObj2 : The subobject for the left upper arm of the stickman. The start point (body) and end point of the upper arm are given as parameters.
    - subObj2::outVar1 : position of the stickman left upper arm start point (upper end at body) in dimension 1 (x_alus)
    - subObj2::outVar2 : position of the stickman left upper arm start point (upper end at body) in dimension 2 (y_alus)
    - subObj2::outVar3 : position of the stickman left upper arm end point in dimension 1 (x_alue)
    - subObj2::outVar4 : position of the stickman left upper arm end point in dimension 2 (y_alue)
    - subObj2::outVar5 : width of line w of the stickman left upper arm
    - subObj3 : The subobject for the first (right) upper leg of the stickman. The start point (body) and end point of the upper leg are given as parameters.
    - subObj3::outVar1 : position of the stickman right upper leg start point (upper end at body) in dimension 1 (x_lrus)
    - subObj3::outVar2 : position of the stickman right upper leg start point (upper end at body) in dimension 2 (y_lrus)
    - subObj3::outVar3 : position of the stickman right upper leg end point in dimension 1 (x_lrue)
    - subObj3::outVar4 : position of the stickman right upper leg end point in dimension 2 (y_lrue)
    - subObj3::outVar5 : width of line w of the stickman right upper leg
    - subObj4 : The subobject for the left (second) upper leg of the stickman. The start point (body) and end point of the upper leg are given as parameters.
    - subObj4::outVar1 : position of the stickman upper left leg start point (upper end at body) in dimension 1 (x_llus)
    - subObj4::outVar2 : position of the stickman upper left leg start point (upper end at body) in dimension 2 (y_llus)
    - subObj4::outVar3 : position of the stickman upper left leg end point in dimension 1 (x_llue)
    - subObj4::outVar4 : position of the stickman upper left leg end point in dimension 2 (y_llue)
    - subObj4::outVar5 : width of line w of the stickman left upper leg
    - subObj5 : The subobject for the body of the stickman. The start point (arms),and end point (legs) of the body are given as parameters.
    - subObj5::outVar1 : position of the stickman body start point (upper end at arms) in dimension 1 (x_bs)
    - subObj5::outVar2 : position of the stickman body start point (upper end at arms) in dimension 2 (y_bs)
    - subObj5::outVar3 : position of the stickman body end point (lower end at legs) in dimension 1 (x_be)
    - subObj5::outVar4 : position of the stickman body end point (lower end at legs) in dimension 2 (y_be)
    - subObj5::outVar5 : width of line w of the stickman body
    - subObj6 : The subobject for the head of the stickman. The center and radius of the head are given as parameters.
    - subObj6::outVar1 : position of the stickman head center point in dimension 1 (x_h)
    - subObj6::outVar2 : position of the stickman head center point in dimension 2 (y_h)
    - subObj6::outVar3 : radius r of the stickman head
    - subObj7 : The subobject for the right lower arm of the stickman. The start point (upper arm) and end point of the lower arm are given as parameters.
    - subObj7::outVar1 : position of the stickman right lower arm start point (upper end at upper arm) in dimension 1 (x_arls)
    - subObj7::outVar2 : position of the stickman right lower arm start point (upper end at upper arm) in dimension 2 (y_arls)
    - subObj7::outVar3 : position of the stickman right lower arm end point in dimension 1 (x_arle)
    - subObj7::outVar4 : position of the stickman right lower arm end point in dimension 2 (y_arle)
    - subObj7::outVar5 : width of line w of the stickman right lower arm
    - subObj8 : The subobject for the left lower arm of the stickman. The start point (upper arm) and end point of the lower arm are given as parameters.
    - subObj8::outVar1 : position of the stickman left lower arm start point (upper end at upper arm) in dimension 1 (x_alls)
    - subObj8::outVar2 : position of the stickman left lower arm start point (upper end at upper arm) in dimension 2 (y_alls)
    - subObj8::outVar3 : position of the stickman left lower arm end point in dimension 1 (x_alle)
    - subObj8::outVar4 : position of the stickman left lower arm end point in dimension 2 (y_alle)
    - subObj8::outVar5 : width of line w of the stickman left lower arm
    - subObj9 : The subobject for the first (right) lower leg of the stickman. The start point (upper leg) and end point of the lower leg are given as parameters.
    - subObj9::outVar1 : position of the stickman right lower leg start point (upper end at upper leg) in dimension 1 (x_lrls)
    - subObj9::outVar2 : position of the stickman right lower leg start point (upper end at upper leg) in dimension 2 (y_lrls)
    - subObj9::outVar3 : position of the stickman right lower leg end point in dimension 1 (x_lrle)
    - subObj9::outVar4 : position of the stickman right lower leg end point in dimension 2 (y_lrle)
    - subObj9::outVar5 : width of line w of the stickman right lower leg
    - subObj10 : The subobject for the left (second) lower leg of the stickman. The start point (upper leg) and end point of the lower leg are given as parameters.
    - subObj10::outVar1 : position of the stickman lower left leg start point (upper end at upper leg) in dimension 1 (x_llls)
    - subObj10::outVar2 : position of the stickman lower left leg start point (upper end at upper leg) in dimension 2 (y_llls)
    - subObj10::outVar3 : position of the stickman lower left leg end point in dimension 1 (x_llle)
    - subObj10::outVar4 : position of the stickman lower left leg end point in dimension 2 (y_llle)
    - subObj10::outVar5 : width of line w of the stickman left lower leg
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3
 - -5059 : stickman framework
    - description : This object represents a stickman framework. The stickman has a body, a head, two arms and two legs, with each one joint in the arms and legs. You have to provide the stickman parts as a subobject (see below). The arms will begin at 1/4 of the body size below the body start (wher the head is). The head will 1/4 (of its radius) overlap the body. The arms length will be the part 0.62 (= golden ratio) of the body or legs. The upper part of arms and legs start at the body, the lower parts start at the other end of the upper parts. The lower part length will be the part 0.62 (= golden ratio) of ther upper part.
    - inVar1 : position of the stickman start point (lower end of first (right) lower leg) in dimension 1 (x_lrle)
    - inVar2 : position of the stickman start point (lower end of first (right) lower leg) in dimension 2 (y_lrle)
    - inVar3 : size s of stickman (top of the head to feet bottom, if legs are straight)
    - inVar4 : angle alpha of body to the dimension 2 axis (or y-axis, because most stickman will be vertical or parallel to the y-axis) in clockwise direction, the feet start points are on the bottom of the body (and, for the angle, on the virtual dimension 2 (y) axis)
    - inVar5 : angle (in radian) betwean right upper arm and body (clockwise direction, if 0 the arm is on the body)
    - inVar6 : angle (in radian) betwean left upper arm and body (counter clockwise direction, if 0 the arm is on the body)
    - inVar7 : angle (in radian) betwean right upper leg and body axis (clockwise direction, if 0 the leg is straight)
    - inVar8 : angle (in radian) betwean left upper leg and body axis (counter clockwise direction, if 0 the leg is straigh)
    - inVar9 : angle (in radian) betwean head and body (clockwise direction)
    - inVar10 : angle (in radian) betwean right lower arm and upper arm (clockwise direction, if 0 the arm is straight)
    - inVar11 : angle (in radian) betwean left lower arm and upper arm (counter clockwise direction, if 0 the arm is straight)
    - inVar12 : angle (in radian) betwean right lower leg and upper leg (counter clockwise direction, if 0 the leg is straight)
    - inVar13 : angle (in radian) betwean left lower leg and upper leg (clockwise direction, if 0 the leg is straigh)
    - inVar14 : width of lines w of the stickman (if lower or equal 0 the standard width w = size s / 24 will be used)
    - inVar15 : radius r of head of the stickman (if lower or equal 0 the standard width r = size s / 10 will be used)
    - subObj1 : The subobject for the body parts of the stickman. The parameters for the body, head, right upper arm, right lower arm, left upper arm, left lower arm, right upper leg, right lower leg, left upper leg and left lower leg are given.
    - subObj1::outVar1 : width of line w of the stickman body, right upper arm, right lower arm, left upper arm, left lower arm, right upper leg, right lower leg, left upper leg and left lower leg
    - subObj1::outVar2till5 : The parameter for the body of the stickman. The start point (arms),and end point (legs) of the body are given as parameters.
    - subObj1::outVar2 : position of the stickman body start point (upper end at arms) in dimension 1 (x_bs)
    - subObj1::outVar3 : position of the stickman body start point (upper end at arms) in dimension 2 (y_bs)
    - subObj1::outVar4 : position of the stickman body end point (lower end at legs) in dimension 1 (x_be)
    - subObj1::outVar5 : position of the stickman body end point (lower end at legs) in dimension 2 (y_be)
    - subObj1::outVar6till8 : The parameter for the head of the stickman. The center and radius of the head are given as parameters.
    - subObj1::outVar6 : position of the stickman head center point in dimension 1 (x_h)
    - subObj1::outVar7 : position of the stickman head center point in dimension 2 (y_h)
    - subObj1::outVar8 : radius r of the stickman head
    - subObj1::outVar9till12 : The parameter for the right upper arm of the stickman. The start point (body) and end point of the upper arm are given as parameters.
    - subObj1::outVar9 : position of the stickman right upper arm start point (upper end at body) in dimension 1 (x_arus)
    - subObj1::outVar10 : position of the stickman right upper arm start point (upper end at body) in dimension 2 (y_arus)
    - subObj1::outVar11 : position of the stickman right upper arm end point in dimension 1 (x_arue)
    - subObj1::outVar12 : position of the stickman right upper arm end point in dimension 2 (y_arue)
    - subObj1::outVar13till16 : The parameter for the right lower arm of the stickman. The start point (upper arm) and end point of the lower arm are given as parameters.
    - subObj1::outVar13 : position of the stickman right lower arm start point (upper end at upper arm) in dimension 1 (x_arls)
    - subObj1::outVar14 : position of the stickman right lower arm start point (upper end at upper arm) in dimension 2 (y_arls)
    - subObj1::outVar15 : position of the stickman right lower arm end point in dimension 1 (x_arle)
    - subObj1::outVar16 : position of the stickman right lower arm end point in dimension 2 (y_arle)
    - subObj1::outVar17till20 : The parameter for the left upper arm of the stickman. The start point (body) and end point of the upper arm are given as parameters.
    - subObj1::outVar17 : position of the stickman left upper arm start point (upper end at body) in dimension 1 (x_alus)
    - subObj1::outVar18 : position of the stickman left upper arm start point (upper end at body) in dimension 2 (y_alus)
    - subObj1::outVar19 : position of the stickman left upper arm end point in dimension 1 (x_alue)
    - subObj1::outVar20 : position of the stickman left upper arm end point in dimension 2 (y_alue)
    - subObj1::outVar21till24 : The parameter for the left lower arm of the stickman. The start point (upper arm) and end point of the lower arm are given as parameters.
    - subObj1::outVar21 : position of the stickman left lower arm start point (upper end at upper arm) in dimension 1 (x_alls)
    - subObj1::outVar22 : position of the stickman left lower arm start point (upper end at upper arm) in dimension 2 (y_alls)
    - subObj1::outVar23 : position of the stickman left lower arm end point in dimension 1 (x_alle)
    - subObj1::outVar24 : position of the stickman left lower arm end point in dimension 2 (y_alle)
    - subObj1::outVar25till28 : The parameter for the first (right) upper leg of the stickman. The start point (body) and end point of the upper leg are given as parameters.
    - subObj1::outVar25 : position of the stickman right upper leg start point (upper end at body) in dimension 1 (x_lrus)
    - subObj1::outVar26 : position of the stickman right upper leg start point (upper end at body) in dimension 2 (y_lrus)
    - subObj1::outVar27 : position of the stickman right upper leg end point in dimension 1 (x_lrue)
    - subObj1::outVar28 : position of the stickman right upper leg end point in dimension 2 (y_lrue)
    - subObj1::outVar29till32 : The parameter for the first (right) lower leg of the stickman. The start point (upper leg) and end point of the lower leg are given as parameters.
    - subObj1::outVar29 : position of the stickman right lower leg start point (upper end at upper leg) in dimension 1 (x_lrls)
    - subObj1::outVar30 : position of the stickman right lower leg start point (upper end at upper leg) in dimension 2 (y_lrls)
    - subObj1::outVar31 : position of the stickman right lower leg end point in dimension 1 (x_lrle)
    - subObj1::outVar32 : position of the stickman right lower leg end point in dimension 2 (y_lrle)
    - subObj1::outVar33till36 : The parameter for the left (second) upper leg of the stickman. The start point (body) and end point of the upper leg are given as parameters.
    - subObj1::outVar33 : position of the stickman upper left leg start point (upper end at body) in dimension 1 (x_llus)
    - subObj1::outVar34 : position of the stickman upper left leg start point (upper end at body) in dimension 2 (y_llus)
    - subObj1::outVar35 : position of the stickman upper left leg end point in dimension 1 (x_llue)
    - subObj1::outVar36 : position of the stickman upper left leg end point in dimension 2 (y_llue)
    - subObj1::outVar37till40 : The parameter for the left (second) lower leg of the stickman. The start point (upper leg) and end point of the lower leg are given as parameters.
    - subObj1::outVar37 : position of the stickman lower left leg start point (upper end at upper leg) in dimension 1 (x_llls)
    - subObj1::outVar38 : position of the stickman lower left leg start point (upper end at upper leg) in dimension 2 (y_llls)
    - subObj1::outVar39 : position of the stickman lower left leg end point in dimension 1 (x_llle)
    - subObj1::outVar40 : position of the stickman lower left leg end point in dimension 2 (y_llle)
    - author : Betti Oesterholz
    - author::email : Oesterholz@Fib-Development.org
    - copyright : LGPL3

